{"ast":null,"code":"import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'environments/environment.prod';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProductoService = /*#__PURE__*/(() => {\n  class ProductoService {\n    //url = 'http://localhost:3000/api/';\n    constructor(http) {\n      this.http = http;\n      this.url = 'https://apiproducts-ksqp.onrender.com/api/';\n      this.URL = environment.API;\n      this.opt = this.createRequestOptions();\n    }\n\n    getProductos() {\n      return this.http.get(this.URL + 'products', {\n        headers: this.opt\n      });\n    }\n\n    eliminarProducto(id) {\n      return this.http.delete(`${this.URL}${id}`);\n    }\n\n    getProductosFac() {\n      return this.http.get(this.URL + 'products/Fac', {\n        headers: this.opt\n      });\n    }\n\n    guardarProducto(producto) {\n      return this.http.post(this.URL + 'products', producto, {\n        headers: this.opt\n      });\n    }\n\n    actualizarProducto(producto) {\n      return this.http.put(this.URL + 'products', producto, {\n        headers: this.opt\n      });\n    }\n\n    obtenerProducto(id) {\n      console.log(id);\n      return this.http.get(`https://apiproducts-ksqp.onrender.com/api/products/buscador/${id}`); //return this.http.get<Root>(`http://localhost:3000/api/products/buscador/${id}`);\n    }\n\n    editarProducto(id, producto) {\n      return this.http.put(`${this.URL}${id}`, producto);\n    }\n\n    uploadImage(file) {\n      const formData = new FormData();\n      console.log(file);\n      formData.append('image', file);\n      return this.http.post('https://api.imgbb.com/1/upload?key=5ce77e0698e3e45d85a2262bed67554e', formData);\n    }\n\n    createRequestOptions() {\n      let token = JSON.parse(localStorage.getItem(\"token\"));\n      let headers = new HttpHeaders({\n        \"Content-Type\": \"application/json\",\n        'x-token': token\n      });\n      return headers;\n    }\n\n  }\n\n  ProductoService.ɵfac = function ProductoService_Factory(t) {\n    return new (t || ProductoService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ProductoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductoService,\n    factory: ProductoService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProductoService;\n})();","map":null,"metadata":{},"sourceType":"module"}