{"ast":null,"code":"import { Router } from \"@angular/router\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { CodigoBarrasService } from \"../../Services/codigo.service\";\nimport { ProductoService } from \"app/Services/producto.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"../../Services/codigo.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"app/Services/producto.service\";\nimport * as i6 from \"angular-datatables\";\nexport let ListaFacturaComponent = /*#__PURE__*/(() => {\n  class ListaFacturaComponent {\n    constructor(toastr, http, codigoBarrasService, router, prodService) {\n      this.toastr = toastr;\n      this.http = http;\n      this.codigoBarrasService = codigoBarrasService;\n      this.router = router;\n      this.prodService = prodService;\n      this.listProductos = [];\n      this.busqueda = \"\";\n      this.filtrarProductos = []; // Productos filtrados\n\n      this.todosLosProductos = []; // Mantén una copia de seguridad de todos los productos\n\n      this.productoSeleccionado = null;\n      this.busquedaInicial = \"\";\n      this.busquedaActual = \"\";\n      this.dtOptionsGCB = {};\n    }\n\n    get productosFiltrados() {\n      return this.listProductos.filter(producto => producto.nombre.toLowerCase().includes(this.busqueda.toLowerCase()));\n    }\n\n    ngAfterViewInit() {\n      var _thisDoc = this;\n\n      $(\"#producto-tableGCB\").on(\"click\", \"#EditarProductoGCB\", function (data) {\n        let datas = $(\"#producto-tableGCB\").DataTable().row($(this).parents(\"tr\")).data();\n        console.log(datas);\n\n        _thisDoc.editarProducto(datas.ID.toString());\n      });\n    }\n\n    InitializateTableGCB() {\n      this.dtOptionsGCB = {\n        ajax: (dataTablesParameters, callback) => {\n          this.prodService.getProductosCategoria().subscribe(data => {\n            callback({\n              data: data.data\n            });\n          });\n        },\n        language: {\n          url: \"https://cdn.datatables.net/plug-ins/1.13.1/i18n/es-ES.json\"\n        },\n        columns: [{\n          title: \"ID\",\n          data: \"ID\"\n        }, {\n          title: \"Nombre\",\n          data: \"Nombre\"\n        }, {\n          title: \"Imagen\",\n          data: \"ImgUrl\",\n          render: function (data) {\n            return `<img src=\"${data}\" width=\"150\" height=\"150\" class=\"rounded mx-auto d-block\" alt=\"No se puede mostrar la imágen\">`;\n          }\n        }, // {\n        //   title: \"Precio\",\n        //   data: \"Precio\",\n        //   render: $.fn.dataTable.render.number(\",\", \".\", 2, \"$\"),\n        //   type: \"currency\",\n        // },\n        {\n          title: \"Codigo\",\n          data: \"Codigo\"\n        }, {\n          title: \"Peso\",\n          data: \"Peso\",\n          render: $.fn.dataTable.render.number(\",\", \".\", 4)\n        }],\n        columnDefs: [{\n          targets: 5,\n          title: \"Estado\",\n          data: \"Estado\",\n          render: function (data, type, row) {\n            return data == 1 ? `<span class=\"badge bg-info\">Activo</span>` : `<span class=\"badge bg-danger\">Inactivo</span>`;\n          }\n        }, {\n          targets: 6,\n          title: \"Opciones\",\n          data: null,\n          render: function (data, type, row) {\n            return `<button\n              #Editar\n            id=\"EditarProductoGCB\"\n            type=\"button\"\n            class=\"btn btn-info btn-sm\"\n            \n          >\n            <i class=\"nc-icon nc-cart-simple\"></i>\n          </button>\n  \n          </button>`;\n          }\n        }]\n      };\n    }\n\n    ngOnInit() {\n      this.busquedaInicial = this.busqueda;\n      this.busquedaActual = this.busqueda;\n      this.InitializateTableGCB();\n    } //editarProducto(producto: any)\n\n\n    editarProducto(id) {\n      this.router.navigate([\"/editar-producto\", id]);\n    }\n\n    actualizarProductosFiltrados() {\n      this.filtrarProductos = this.listProductos.filter(producto => producto.nombre.toLowerCase().includes(this.busquedaActual.toLowerCase()));\n    }\n\n    actualizarBusqueda(nuevaBusqueda) {\n      this.busquedaActual = nuevaBusqueda;\n      this.actualizarProductosFiltrados();\n    }\n\n    generarCodigoBarras(codigo, peso, precio) {\n      return this.codigoBarrasService.calcularCodigoBarras(codigo, peso, precio);\n    }\n\n  }\n\n  ListaFacturaComponent.ɵfac = function ListaFacturaComponent_Factory(t) {\n    return new (t || ListaFacturaComponent)(i0.ɵɵdirectiveInject(i1.ToastrService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.CodigoBarrasService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.ProductoService));\n  };\n\n  ListaFacturaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListaFacturaComponent,\n    selectors: [[\"app-lista-factura\"]],\n    decls: 8,\n    vars: 1,\n    consts: [[1, \"row\"], [1, \"col-md-12\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"table-responsive\", \"table-dark\", \"table-striped\"], [\"id\", \"producto-tableGCB\", \"datatable\", \"\", 1, \"row-border\", \"hover\", 3, \"dtOptions\"]],\n    template: function ListaFacturaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 2)(5, \"div\", 4)(6, \"div\", 5);\n        i0.ɵɵelement(7, \"table\", 6);\n        i0.ɵɵelementEnd()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"dtOptions\", ctx.dtOptionsGCB);\n      }\n    },\n    dependencies: [i6.DataTableDirective]\n  });\n  return ListaFacturaComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}